@model SecureQuestionBankV0._1._3.Models.MCQQuestionUpdate

@{
    ViewBag.Title = "MCQUpdate";
    Layout = "~/Views/Shared/SubAdminLayout.cshtml";
}

<h2>MCQUpdate</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>MCQQuestionUpdate</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.QuestionNo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionNo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.QuestionDescription, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.QuestionDescription, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.QuestionDescription, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.option1, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.option1, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.option1, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.option2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.option2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.option2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.option3, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.option3, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.option3, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.option4, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.option4, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.option4, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model =>model.CorrectOption, htmlAttributes:
                       new {
                              @class = "control-label col-md-2"
                          })
        <div class="col-md-10">
            @Html.EnumDropDownListFor(model =>model.CorrectOption, htmlAttributes:
                          new {
                                @class = "form-control"
                              })
            @Html.ValidationMessageFor(model =>model.CorrectOption, "",
                          new {
                                @class = "text-danger"
                              })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Ok" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
